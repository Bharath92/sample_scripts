resources:
  - name: sample_scripts_repo
    type: gitRepo
    integration: github
    pointer:
      sourceName: bharath92/sample_scripts
      branch: scripts

jobs:
  - name: verify_success_cases
    type: runSh
    runtime:
      nodePool: u14custom
    steps:
    - IN: sample_scripts_repo
    - TASK:
        name: simple
        script:
          - ls
    - TASK:
        name: multi_simple
        script: |
            ls
            pwd
            true
    - TASK:
        name: multi_exit_0
        script: |
            ls
            exit 0
            pwd
    - TASK:
        name: exit-0->
        script: >
            exit 0
    - TASK:
        name: run_success_script
        script:
          - pushd $(shipctl get_resource_state "sample_scripts_repo") && git checkout scripts
          - ./success_script.sh
          - popd
    - TASK:
        name: host_simple
        runtime:
          container: false
        script:
          - ls
    - TASK:
        name: host_multi_simple
        runtime:
          container: false
        script: |
            ls
            pwd
            true
    - TASK:
        name: host_multi_exit-0
        runtime:
          container: false
        script: |
            ls
            exit 0
            pwd
    - TASK:
        name: host_exit_0->
        runtime:
          container: false
        script: >
            exit 0
    - TASK:
        name: run_success_script
        runtime:
          container: false
        script:
          - pushd $(shipctl get_resource_state "sample_scripts_repo") && git checkout scripts
          - ./success_script.sh
          - popd

  - name: single_line_incorrect_command
    type: runSh
    runtime:
      nodePool: u14custom
    steps:
    - IN: verify_success_cases
    - TASK:
        name: host_exit_1
        runtime:
          container: false
        script: >
            ls;
            sl;
            pwd;

  - name: simple_incorrect_command
    type: runSh
    runtime:
      nodePool: u14custom
    steps:
    - IN: verify_success_cases
    - TASK:
        name: wrong_command
        script: sl

  - name: multi_line_incorrect_command
    type: runSh
    runtime:
      nodePool: u14custom
    steps:
    - IN: verify_success_cases
    - TASK:
        name: multi-line-fail
        script: |
            ls
            sl
            pwd

  - name: simple_non_zero_exit
    type: runSh
    runtime:
      nodePool: u14custom
    steps:
    - IN: verify_success_cases
    - TASK:
        name: non_zero_exit
        script: exit -1

  - name: run_fail_script
    type: runSh
    runtime:
      nodePool: u14custom
    steps:
    - IN: verify_success_cases
    - IN: sample_scripts_repo
    - TASK:
        name: run_fail_script
        script:
          - pushd $(shipctl get_resource_state "sample_scripts_repo") && git checkout scripts
          - ./failure_script.sh
          - popd

  - name: sleep_in_always_on_success
    type: runSh
    steps:
    - IN: verify_success_cases
    - IN: sample_scripts_repo
    - TASK:
        name: run_fail_script
        script:
          - export foo=bar
    on_success:
      - script: echo $foo
      - script: foo=on_success
      - script: sleep 5
    always:
      - script: echo $foo
      - script: sleep 5

# caveats
  - name: unset_err_trap_and_incorrect_command
    type: runSh
    runtime:
      nodePool: u14custom
    steps:
    - TASK:
        name: run_fail_script
        script: |
            trap "" ERR
            sl
            ls

  - name: unset_exit_trap_exit_0
    type: runSh
    runtime:
      nodePool: u14custom
    steps:
    - TASK:
        name: run_fail_script
        script: |
            trap "" EXIT
            exit 0

  - name: exit_0_in_on_success
    type: runSh
    runtime:
      nodePool: u14custom
    steps:
    - TASK:
        script: echo foo
    on_success:
      - script: exit 0
    always:
      - script: echo always

  - name: wrong_command_in_on_success
    type: runSh
    runtime:
      nodePool: u14custom
    steps:
    - TASK:
        script: echo foo
    on_success:
      - script: sl
    always:
      - script: echo always

  - name: exit_1_in_on_success
    type: runSh
    runtime:
      nodePool: u14custom
    steps:
    - TASK:
        script: export foo=123
    on_success:
      - script: echo $foo && exit 1
    always:
      - script: echo $foo && echo always
